(*
Setup
=====

The Setup file includes all the files that MSI uses throughout the include, plus
the necessary setup procedures called when the script starts.

The source for can be found
`here <https://github.com/SRL/MSI/raw/master/MSI/Core/Setup.simba>`_.

*)

//SRL Includes
{$i srl/srl.simba}

{$IFDEF SMART}
  {$i srl/srl/misc/paintsmart.simba}
{$ELSE}
  {$IFNDEF SPS}
    {$DEFINE SPS}
  {$ENDIF}
{$ENDIF}

{$IFDEF SPS}
  {$i sps/sps.simba}
{$ENDIF}

{$i srl/srl/misc/Reports.simba}
//{$i srl/srl/misc/reportsGUI.simba}
{$i srl/srl/skill/magic.simba}

{$IFDEF SRL_REMOTE}
  {$i srl/srl/misc/remote.simba}
{$ENDIF}

{$i srl/srl/misc/quickchat.simba}

//MSI Script
{$i MSI/MSI/Core/Globals.simba}
{$i MSI/MSI/Core/Debug.simba}
{$i MSI/MSI/Core/Extras.simba}
{$i MSI/MSI/Core/Manipulation.simba}
{$i MSI/MSI/Core/Track.simba}
{$i MSI/MSI/Core/Antiban.simba}
{$i MSI/MSI/Core/Animating.simba}
{$i MSI/MSI/Core/Objects.simba}
{$i MSI/MSI/Core/Items.simba}
{$i MSI/MSI/Core/Obstacles.simba}
{$i MSI/MSI/Skills/Magic.simba} //Used in Walking.simba
{$i MSI/MSI/Core/Walking.simba}
{$i MSI/MSI/Core/Locations.simba}
{$i MSI/MSI/Core/Materials.simba}

{$i MSI/MSI/Skills/Common.simba}
{$i MSI/MSI/Core/Banking.simba}

//MSI Skill Files
{$i MSI/MSI/Skills/Woodcutting.simba}
{$i MSI/MSI/Skills/Mining.simba}
{$i MSI/MSI/Skills/Fishing.simba}
{$i MSI/MSI/Skills/Cooking.simba}
{$i MSI/MSI/Skills/Money_Making.simba}
{$i MSI/MSI/Skills/RuneCrafting.simba}

{$i MSI/MSI/Core/Reports.simba}
{$i MSI/MSI/Core/Scripts.simba}

//Extras
{$IFDEF EXTRA_EXAMPLE}
  {$i MSI/MSI/Extras/Example.simba}
{$ENDIF}

{$IFDEF EXTRA_CHARACTER_STATS}
  {$i MSI/MSI/Extras/CharacterStats.simba}
{$ENDIF}

//MSI Skill Loops, AI and Mainloop
{$i MSI/MSI/Core/MainLoop.simba}
{$i MSI/MSI/Form/MSI_Form.simba}

(*
MSI_Setup
~~~~~~~~~

.. code-block:: pascal

  procedure MSI_Setup();

Sets up MSI by loading all the global arrays used throughout the include.

.. note::

  | Author: Coh3n
  | Last Updated: 27 February 2010 by Coh3n

Example:

.. code-block:: pascal

  MSI_Setup();
*)
procedure MSI_Setup();
var
  Timer: integer;
begin
  MarkTime(Timer);

  MSI_LoadAllScripts;
  MSI_LoadAllLocations;
  MSI_LoadAllItems;
  MSI_LoadAllSpells;
  MSI_LoadAllExtras;
  Track_LoadNames;

  Writeln('Setting up MSI took '+IntToStr(TimeFromMark(Timer))+' ms.');
end;

(*
MSI_WalkingDefines
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_WalkingDefines();

Warns the user of the possible issues depending on the walking method they
chose.  Sets MSI_HookBroken[HOOK_WALKING] true or false depending on the final
walking method chosen.

.. note::

  | Author: Coh3n
  | Last Updated: 05 Novemeber 2011 by Coh3n

Example:

.. code-block:: pascal

  MSI_CheckDefines();
*)
procedure MSI_WalkingDefines();
var
  i, j: integer;
  areWalking: boolean;
begin
  // goes through player's scripts to see if walking is required
  for i := 0 to high(MSI_Players) do
    with MSI_Players[i] do
    begin
      for j := 0 to high(scripts) do
        if (length(MSI_Scripts[scripts[j].name].pathInfo.spsPath) > 0) then
        begin
          areWalking := true;
          break;
        end;

      if (areWalking) then
        break;
    end;

  // exit if walking isn't required
  if (not areWalking) then
  begin
    MSI_SubDebug('MSI_WalkingDefines: Walking not required');
    exit;
  end;

  // warns the user that without SPS, there's no walking available
  {$IFNDEF SPS}
  case messageDlg('WARNING',
        'SPS isn''t defined. Please click No and define SPS at the top of ' +
        'RunMe.simba or Yes to use MSI without SPS walking.',
        mtConfirmation, [mbYes, mbNo]) of
    mrYes: ;
    mrNo: terminateScript();
  end;
  {$ENDIF}
end;

