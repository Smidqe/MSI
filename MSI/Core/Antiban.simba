(*
Antiban
=======

The Antiban file includes functions & procedures that perform certain
actions in order to avoid being banned from Runescape.

The source for can be found
`here <https://github.com/SRL/MSI/raw/master/MSI/Core/Antiban.simba>`_.

*)

(*
MSI_MultiMouse
~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_MultiMouse(x, y, chance, maxClicks: integer; red: boolean): boolean;

Will simulate "spam" clicking on the point x, y.  Will do it a random amount
between 1 and 'maxClicks'.  Will click once no matter what, then has a percent
'chance' of clicking again after that.  Will not exceed 'maxClicks'.  if 'red'
then will return true if the red X appears after clicking an object, else will
return true after clicking.

.. note::

  | Author: Coh3n
  | Last Updated: 21 July 2011 by Coh3n

Example:

.. code-block:: pascal

  if (waitUptext('ree', 200)) then
    MSI_MultiMouse(x, y, 35, 5, true);
*)
function MSI_MultiMouse(x, y, chance, maxClicks: integer; red: boolean): boolean;
var
  clicks: integer;
begin
  repeat
    inc(clicks);
    mouse(x, y, 0, 0, true);

    if (red) then
      result := didClick(true, 1000)
    else
      result := true;

    if (random(100) > chance) or (not result) then
      break;
  until(clicks >= maxClicks);
end;

(*
MSI_MultiOption
~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_MultiOption(x, y: integer; options: TStringArray; chance, maxClicks: integer): boolean;

Will right-click on the point x, y and choose the option 'options'.  Has a
percentage chance (chace) of doing so and will do so a maximum of 'maxClicks'.
Returns true if the correct option is chosen at least once.

.. note::

  | Author: Coh3n
  | Last Updated: 08 July 2011 by Coh3n

Example:

.. code-block:: pascal

  MSI_MultiOption(x, y, ['uick', 'ank-qui'], 30, 3);
*)
function MSI_MultiOption(x, y: integer; options: TStringArray; chance, maxClicks: integer): boolean;
var
  clicks: integer;
begin
  repeat // simulates multiple clicking like a human would
    inc(clicks);
    mouse(x, y, 0, 0, false);

    // already chose option, if try again the option may not be there (avoids false negatives)
    if (not result) then
      result := waitOptionMulti(options, randomRange(150, 200))
    else
      waitOptionMulti(options, randomRange(150, 200));

    if (random(100) > chance) or (not didClick(true, 50 + random(50))) then
      break;
  until(clicks >= maxClicks);
end;

(*
MSI_Conversation
~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_Conversation(texts: TStringArray; clickCont: TBooleanArray): boolean;

Goes through a conversation in the chat box.  Will look for the strings 'texts'.
If the corresponding boolean from 'clickCont' is set to true, it will click the
"Click to Continue" button, otherwise will click the text.  The length of
'texts' and 'clickCont' have to be the same.

.. note::

  | Author: Coh3n
  | Last Updated: 15 June 2011 by Coh3n

Example:

.. code-block:: pascal

  if (MSI_FindObject(MSI_GetObject(NPC_STILES), moRight)) then
    MSI_Conversation(['exchan', 'exchan', 'exchan', 'obbies', 'kay'],
                     [true, false, true, true, false]);
*)
function MSI_Conversation(texts: TStringArray; clickCont: TBooleanArray): boolean;
var
  i, x, y: integer;
begin
  if (not loggedIn) then
    exit;

  if (length(texts) <> length(clickCont)) then
  begin
    MSI_SubDebug('MSI_Conversation: texts <> clickCont');
    exit;
  end;

  for i := 0 to high(texts) do
  begin
    if (findText(x, y, texts[i], NPCChars, MCX1, MCY1, MCX2, MCY2)) then
    begin
      if (clickCont[i]) then
        clickContinue(true, true)
      else begin
        mouse(x, y, 2, 2, true);
        chatWait();
      end;

      result := (i = high(texts));
    end;

    wait(100 + random(300))
  end;
end;

(*
MSI_IgnoreSpam
~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_IgnoreSpam: boolean;

Searches the chat box for common spam bot phrases and ignores player if found.

.. note::

  | Author: NCDS
  | Last Updated: 14 August 2011 by NCDS

Example:

.. code-block:: pascal

  MSI_IgnoreSpam;
*)
function MSI_IgnoreSpam: Boolean;
var
  i, h, ii: Integer;
  textArray, Trigger: TStringArray;
begin
  if (not LoggedIn) then
    Exit;

  try
    Trigger := ['Wvvw', 'Co M', 'Co m', 'C o m', 'C 0m', 'C 0 m', 'C O M', 'C OM', 'C o M',
                'cheap Gold', 'Cheap Gold', 'Rsgold', '$$$$$$$$$', '+++++++++++',
                '~~~~~~~~~', '*******'];
    textArray := ChatBoxTextArray(clChat);
    h := High(textArray);

    for i := h downto 1 do // Main text
      for ii := 0 to High(Trigger) do
        if (Pos(Trigger[ii], textArray[i]) > 0) then
        begin
          ClickText(Trigger[ii], SmallChars, MCx1, MCy1, MCx2, MCy2, False);
          Result := WaitOptionMulti(['ignore', 'ign', 'ore'], 1000);
          if Result then
            Exit;
        end;
  except
    MSI_SubDebug('MSI_IgnoreSpam: Caught exception');
  end;
end;

(*
MSI_GetPlayers
~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_GetPlayers(): Integer;

A MSI wrapper for the SRL CountDots function. Made the wrapper so it's easier
to change/fix in the future.

.. note::

  | Author: Camo Developer
  | Last Updated: 07 November 2011 by Camo Developer

Example:

.. code-block:: pascal

  playerCount := MSI_GetPlayers();
*)
function MSI_GetPlayers(): Integer;
begin
  Result := CountDots('white');
  MSI_SubDebug('Players Found: '+toStr(Result));
end;

(*
MSI_ChangeWorlds
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_ChangeWorlds(): boolean;

Counts the player dots in the MiniMap and if there are more in there than what
the script user set, it changes to a less filled world. The SETUP_MAX_PLAYERS
constant can be found in Globals.simba.

.. note::

  | Author: Camo Developer
  | Last Updated: 07 November 2011 by Camo Developer

Example:

.. code-block:: pascal

  MSI_ChangeWorlds;
*)
function MSI_ChangeWorlds(): boolean;
begin
  if (MSI_GetPlayers() > MSI_Settings[SETUP_MAX_PLAYERS]) then
  begin
    if not LobbyScreen then
      ExitToLobby;
    Wait(RandomRange(1500, 2000));
    ChooseWorldBy(['players'], [True], MSI_Players[CurrentPlayer].Member, False);
    Wait(RandomRange(750, 1250));
    MouseBox(270, 450, 490, 470, 1); // Play button
    Result := WaitFunc(@LoggedIn, 200, 10000);
  end;
end;

(*
MSI_Antiban
~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_Antiban(HowLong, ChancePerc: Integer);

Has a specified percentage chance (ChancePerc) of performing antiban
procedures for a specified length of time in milliseconds (HowLong)

.. note::

  | Author: Naum
  | Last Updated: 12 July 2011 by NCDS

Example:

.. code-block:: pascal

  while (IsChopping) do
  begin
    MSI_Antiban(2000 + RandomRange(-1000, 1000), ANTI_BAN_CHANCE); // ANTI_BAN_CHANCE is a constant that can be found in Globals.simba
    Wait(RandomRange(500, 750));
  end;
*)
Procedure MSI_AntiBan(HowLong, ChancePerc: Integer);
Var
  RanTab, I, Time, _avg : Integer;
  b: Boolean;
Begin
  if (not LoggedIn) then
    Exit;

  if (Random(100) > ChancePerc) or (NextAntiban > GetSystemTime) then
    Exit;

  _avg := Round(MSI_Settings[SETUP_ANTIBAN_WAIT] * (RANDOM_TIME_PERCENT + (RANDOM_TIME_PERCENT * 0.50)));
  NextAntiban := GetSystemTime + (MSI_Settings[SETUP_ANTIBAN_WAIT] + RandomRange(-Round(_avg / 2), _avg));

  MSI_SubDebug('MSI_AntiBan');
  if (MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name = SCRIPT_ALCHER) and (Random(100) > ChancePerc) then
  begin
    MakeCompass('random');
    if Random(10) = 5 then
      MakeCompass('n');
    Exit;
  end;

  MSI_IgnoreSpam;

  gameTab(TAB_INV);

  if (LeaveDangerZone) then
    MSI_Debug('Left danger zone');

  Case HowLong Of
    0..2000:
     Case Random(4) Of
        0 : SleepAndMoveMouse(HowLong + Random(HowLong/10));
        1 : Begin
              RanTab := RandomRange(TAB_Combat, TAB_LogOut);
              GameTab(RanTab);
              Wait(HowLong + Random(HowLong/10));
              GameTab(tab_Inv);
            End;
        2 : RandomRClick;
        3 : begin
              b := IsXPBarOpen;
              ToggleXPBar(not b);
            end;
      End;

    2001..5000:
      Case Random(4) Of
         0 : HoverSkill(MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name].SkillName, False);
         1 : PickUpMouse;
         2 : SleepAndMoveMouse(HowLong + Random(HowLong/10));
         3 : If Random(4) = 2 Then
             For I := 0 To Round(HowLong/800) Do
               If I Mod 2 = 0 Then ExamineInv;
       End;

    5001..10000:
      If Random(2) = 1 Then
        RandomMovement
      Else
        MSI_AntiBan(Round(HowLong/2) + Random(1000), 100);

    10001..20000:
      Case Random(3) Of
        0 : MSI_AntiBan(Round(HowLong/2) + Random(1000), 100);
        1 : BoredHuman;
        2 : RandomAngle(1);
      End;

    20001..999999:
      begin
        Time := GetSystemTime + HowLong;
        while (Time > GetSystemTime) do
        begin
          MSI_AntiBan(7000 + Random(200), 100);
          wait(random(5000));
        end;
      end;
  End;
End;

(*
MSI_QCLevelUp
~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_QCLevelUp();

Has a specified percentage chance (ChancePerc) of performing antiban
procedures for a specified length of time in milliseconds (HowLong)

.. note::

  | Author: Camo Developer
  | Last Updated: 07 November 2011 by Camo Developer

Example:

.. code-block:: pascal
  if (LevelUp) then
    MSI_QCLevelUp();
*)
procedure MSI_QCLevelUp();
var
  chance : integer;
  skillName : string;
begin
  if (MSI_Settings[SETUP_QC_LEVELUP]) then
  begin
    chance := Random(100);
    skillName := MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name].SkillName;

    case GetSkillLevel(skillName) of
      20..40 : if chance > 80 then QCSayLevel(skillName);
      41..65 : if chance < 50 then QCSayLevel(skillName);
      66..89 : if chance > 25 then QCSayLevel(skillName);
      90..99 : QCSayLevel(skillName);
    end;
  end;
end;

(*
MSI_LevelUp
~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_LevelUp();

Checks to see if the player has leveled up.  Calls SRL's LevelUp procedure.
Will increase the stats variable if the player is found to have gained a level.

.. note::

  | Author: Coh3n
  | Last Updated: 07 November 2011 by Camo Developer

Example:

.. code-block:: pascal

  MSI_LevelUp();
*)
procedure MSI_LevelUp();
begin
  if (LevelUp) then
  begin
    if (MSI_Players[CurrentPlayer].Scripts[CurrentScript].MaxLevel > 0) then
      if (MSI_Players[CurrentPlayer].ReportInfo.SkillLevels[CurrentScript] >=
          MSI_Players[CurrentPlayer].Scripts[CurrentScript].MaxLevel) then
        TakeScreen('MaxLevel');

    MSI_SubDebug('MSI_LevelUp: Player has leveled up!');
    stats_IncVariable('Total Levels Gained', 1);
    MSI_QCLevelUp();
  end;
end;

(*
MSI_FindRandoms
~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_FindRandoms(Force: Boolean);

Checks to see if the player has encountered a random event. Set 'Force' to true
to scan for randoms no matter what. By default, MSI waits a minimum of 15 seconds
in between randoms scans (changable by user in the script setup). This procedure
should ALWAYS be called exactly like in this example.

.. note::

  | Author: Coh3n
  | Last Updated: 30 November 2011 by Coh3n

Example:

.. code-block:: pascal

  if (not FindObjects) then // Note that FindObjects is used only as an example
    if (MSI_FindRandoms(False)) then
      if (not LoggedIn) then
        Exit;
*)
function MSI_FindRandoms(Force: Boolean): Boolean;
begin
  if (not LoggedIn) then
    Exit;

  if (MSI_Settings[SETUP_MAX_PLAYERS] > 0) then
    MSI_ChangeWorlds;

  MSI_LevelUp();
  if (LeaveDangerZone) then
    MSI_SubDebug('Left danger zone');

  if (not Force) then
    if (NextRandCheck > GetSystemTime) then
      Exit;

  MSI_SubDebug('Scanning for randoms...');

  if (FindNormalRandoms) then
  begin
    Result := True;
    MSI_SubDebug('MSI_FindRandoms: Finished Random Event!');
    ClickNorth(SRL_ANGLE_HIGH);
  end;

  NextRandCheck := GetSystemTime + MSI_Settings[SETUP_RANDOMS_WAIT];
end;

(*
MSI_NoMouseFindRandoms
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_NoMouseFindRandoms(force: boolean): boolean;

Checks to see if the player has encountered a random event. By default, MSI waits a minimum of 15 seconds
in between randoms scans (changable by user in the script setup).

.. note::

  | Author: Coh3n, & NCDS
  | Last Updated: 16 Feb 2011 by Coh3n

Example:

.. code-block:: pascal

  if (not FindObjects) then // Note that FindObjects is used only as an example
    if MSI_NoMouseFindRandoms(true) then
      if (not LoggedIn) then
        Exit;
*)
function MSI_NoMouseFindRandoms(force: boolean): boolean;
begin
  if (not loggedIn()) then
    exit;

  MSI_LevelUp();

  if (not force) then
    if (nextRandCheck > getSystemTime) then
      exit;

  result := findNonInventoryRandoms();

  nextRandCheck := (getSystemTime() + MSI_Settings[SETUP_RANDOMS_WAIT]);
end;

(*
MSI_WaitWhileResting
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_WaitWhileResting: Boolean;

Simulates a "human-like" rest; returns true if the player's energy is
within the range of ENERGY_MIN and ENERGY_MAX (both constants are found
in Globals.simba)

.. note::

  | Author: NCDS
  | Last Updated: 03 June 2011 by Coh3n

Example:

.. code-block:: pascal

  if (MSI_WaitWhileResting) then
    StartWalking;
*)
function MSI_WaitWhileResting: Boolean;
var
  x, y, cEnergy: Integer;
  t: string;
begin
  if (not LoggedIn) then
    Exit;

  cEnergy := getMMLevels('run', t);
  //MSI_SubDebug('Current Energy: ' + intToStr(cEnergy));

  if (inRange(cEnergy, 0, 10)) then
  begin
    MSI_SubDebug('Resting..');
    if SetRest then
      while ((getMMLevels('run', t) <= (30 + random(30))) and loggedIn) do
        case Random(75) of
          0..50:
            begin
              GetMousePos(x, y);
              if InRange(x, MSx1, MIx2) then
                if Random(2) = 1 then
                  while (not (x > MIx2)) do
                    x := x + 20
                else
                  while (not (x < MSx1)) do
                    x := x - 20;

              if InRange(y, MSy1, MIy2) then
                if Random(2) = 1 then
                  while (not (y > MIy2)) do
                    y := y + 20
                else
                  while (not (y < MSy1)) do
                    y := y - 20;

              MMouse(x, y, 0, 0);
            end;

          51..55:
            SleepAndMoveMouse(5000);

          56:
            ExamineInv;
        end;
  end;

  Result := setRun(true);
end;

