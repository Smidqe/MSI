(*
Animating
=========

The Animating file includes any procedures/functions MSI uses for animating. It
includes the loading of the different animations.

The source for can be found
`here <https://github.com/SRL/MSI/raw/master/MSI/Core/Animating.simba>`_.

*)

(*
MSI_GetAnimation
~~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_GetAnimation(Anim: Integer): TAnimation;

Gets the TAnimation record of the animation 'Anim'.  'Anim' represents one of
the animation constants in
`Globals.simba <https://github.com/SRL/MSI/raw/master/MSI/Core/Globals.simba>`_.

.. note::

  | Author: Coh3n
  | Last Updated: 09 April 2011 by Coh3n

Example:

.. code-block:: pascal

  var
    anim: TAnimation;
  begin
    anim := MSI_GetAnimation(ANIM_FISHING);
  end;
*)
function MSI_GetAnimation(Anim: Integer): TAnimation;
begin
  case Anim of
    ANIM_IDLE:
      with Result do
      begin
        Name := 'Player Idle';
        MinPixelShift := 0;
        MaxPixelShift := 75;
        PixelBox := IntToBox(PLBX1, PLBY1, PLBX2, PLBY2);
        Interval := 25;
        MaxTime := 125;
        WaitTime := 1000;
      end;

    ANIM_ALCH_LOW:
      with Result do
      begin
        Name := 'Low Alching';
        MinPixelShift := 80;
        MaxPixelShift := 260;
        PixelBox := IntToBox(MSCX - 30, MSCY - 40, MSCX + 30, MSCY + 15);
        Interval := 20;
        MaxTime := 75;
        WaitTime := 150;
      end;

    ANIM_ALCH_HIGH:
      with Result do
      begin
        Name := 'High Alching';
        MinPixelShift := 80;
        MaxPixelShift := 260;
        PixelBox := IntToBox(MSCX - 30, MSCY - 40, MSCX + 30, MSCY + 15);
        Interval := 20;
        MaxTime := 100;
        WaitTime := 200;
      end;

    ANIM_TELE:
      with Result do
      begin
        Name := 'Teleporting';
        MinPixelShift := 100;
        MaxPixelShift := 529;
        PixelBox := IntToBox(PLBX1, PLBY1, PLBX2, PLBY2);
        Interval := 25;
        MaxTime := 100;
        WaitTime := 200;
      end;

    ANIM_CHOPPING:
      with Result do
      begin
        Name := 'Chopping';
        MinPixelShift := 200;
        MaxPixelShift := 600;
        PixelBox := IntToBox(PLBX1, PLBY1, PLBX2, PLBY2);
        Interval := 50;
        MaxTime := 250;
        WaitTime := 1000;
      end;

    ANIM_CHOPPING_NEW:
      with Result do
      begin
        Name := 'Chopping (NEW)';
        MinPixelShift := 250;
        MaxPixelShift := 2300;
        PixelBox := IntToBox(PLBX1-15, PLBY1-45, PLBX2+15, PLBY2);
        Interval := 50;
        MaxTime := 250;
        WaitTime := 1000;
      end;
  end;
end;

(*
MSI_IsAnimating
~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_IsAnimating(Anim: Integer): Boolean;

Returns true if the player is animation. 'Anim' represents the animation
constants found in Globals.simba.

.. note::

  | Author: Coh3n
  | Last Updated: 18 May 2012 by NCDS

Example:

.. code-block:: pascal

  while MSI_IsAnimating(ANIM_CHOPPING) do
  begin
    MSI_Antiban(RandomRange(200, 500), ANTI_BAN_CHANCE);
    Wait(RandomRange(200, 800));
  end;
*)
function MSI_IsAnimating(Anim: TAnimation): Boolean;
var
  avg: integer;
  pB: TBox;
begin
  with Anim do
  begin
    pB := pixelBox;

    //Hackish fix for now. Should eventually be localized in Animating.simba
    try
      if MSI_Locations[MSI_Players[currentPlayer].Location].subLocs[MSI_Players[currentPlayer].currentPoint].camera = SRL_ANGLE_LOW then
        pB := intToBox(pB.x1-15, pB.y1-70, pB.x2+15, pB.y2);
    except
    end;
    //Accomodating for high and low angle difference.

    avg := averagePixelShift(pB, interval+(30*Integer(pB.x1<mscx-10)), maxTime+(150*Integer(pB.x1<mscx-10)));
    result := inRange(avg, minPixelShift, maxPixelShift);
    MSI_SubDebug('Average pixel shift: ' + intToStr(avg));

    if (result) then
      MSI_SubDebug('Player animation: ' + anim.name);
  end;
end;

(*
MSI_WaitWhileAnimating
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_WaitWhileAnimating(Anim: TAnimation);

Simply waits while the player is animating. Doesn't perform antiban or check for
randoms; just waits.

.. note::

  | Author: Coh3n
  | Last Updated: 31 March 2011 by Coh3n

Example:

.. code-block:: pascal

  if (MSI_CastInvItem(SPELL_ALCH_HIGH, 16)) then
    MSI_WaitWhileAnimating(ANIM_ALCH_HIGH);
*)
procedure MSI_WaitWhileAnimating(Anim: TAnimation);
var
  t: integer;
  b: boolean;
begin
  with Anim do
  begin
    {$IFDEF SMART}
      if (MSI_Settings[SETUP_DEBUG_SMART]) then
        SMART_DrawBoxEx(true, pixelBox, clYellow);
    {$ENDIF}

    while (true) do
    begin
      t := (getSystemTime + waitTime);
      while (getSystemTime < t) do
      begin
        if (MSI_IsAnimating(Anim)) then
        begin
          b := true;
          break;
        end;

        MSI_FindRandoms(false);
        b := false;
        wait(10);
      end;

      if (not b) then
        break;
    end;
  end;
end;


